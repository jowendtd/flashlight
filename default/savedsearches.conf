
ï»¿[Unmanaged Forwarders]
disabled = 1
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=_internal sourcetype="splunkd" source="*metrics.log" group=tcpin_connections fwdType=uf | stats count latest(_time) AS last_metrics_event values(os) AS os values(version) AS version mean(tcp_KBps) mean(tcp_eps) by hostname, guid | fields - count | eval is_managed="false" | convert ctime(last_metrics_event) | rex field=hostname "^(?<normalized_hostname>[^\.]+)" | eval normalized_hostname=lower(normalized_hostname)  | join guid type=outer [| rest splunk_server_group=dmc_group_deployment_server /services/deployment/server/clients | eval is_managed="true" | rex field=hostname "^(?<normalized_hostname>[^\.]+)" | eval normalized_hostname=lower(normalized_hostname) | rename name AS guid | fields + normalized_hostname, is_managed, guid] | where is_managed="false" | rename hostname AS Hostname guid AS GUID last_metrics_event AS "Last Event" os AS "OS" version AS Version "mean(tcp_KBps)" AS "Tx KBps" "mean(tcp_eps)" AS "Tx EPS" is_managed AS "Managed" normalized_hostname AS "Normalized Hostname" | lookup all_source_list local=true host AS Hostname OUTPUT index sourcetype source | outputlookup unmanaged_forwarders.csv
[All Source List]
description = Daily Populates: all_source_list KVStore
search = | tstats count where index=* OR index=_* by index sourcetype host source\
	| outputlookup all_source_list
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 1 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1

[Avg License by Index - 30 Days]
search = index=summary_license_history_detail \
	| eval datasource=index_name." [".sourcetype_name."]" \
	| eval indexedGB=(indexedMB/1024) \
	| stats avg(indexedGB) AS avgIndexedGB by index_name \
	| eval avgIndexedGB=round(ceiling(avgIndexedGB*100)/100,3)
action.email.useNSSubject = 1
alert.track = 0
disabled = 1
dispatch.earliest_time = -30d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0

[Current License Usage (Bytes)]
description = Continuously (Every 5min) Populates: currentLicenseB.csv
search = index=_internal source=*license_usage.log type="Usage" \
	[| inputlookup server_inventory.csv WHERE primary_role="Indexer" \
	| table host \
	| rename host AS splunk_server] \
	| stats first(_time) AS time sum(b) AS totalB first(idx) AS idx by st pool \
	| eval _time=strftime(time,"%I:%M:%S %p") \
	| table _time pool idx st totalB \
	| rename pool AS LicensePool idx AS IndexName st AS SourcetypeName \
	| outputlookup currentLicenseB.csv
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */15 * * * *
dispatch.earliest_time = @d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1

[Daily Sourcetype to Index]
description = Daily Populates: sourcetype_to_index.csv
search = | tstats summariesonly=false values(License_Usage_Events.st) AS sourcetype FROM datamodel="Log_LicenseUsage" BY License_Usage_Events.pool License_Usage_Events.idx \
	| rename License_Usage_Events.pool AS pool License_Usage_Events.idx AS index \
	| mvexpand sourcetype \
	| outputlookup sourcetype_to_index.csv
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 1 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1

[License Detail Summary - Yesterday]
action.summary_index = 1
action.summary_index._name = summary_license_history_detail
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 1 * * *
description = Daily populates summary_license_history_detail
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
realtime_schedule = 0
search = | tstats summariesonly=false max(_time) AS _time sum(License_Usage_Events.b) AS bytes FROM datamodel="Log_LicenseUsage" BY License_Usage_Events.pool License_Usage_Events.idx License_Usage_Events.st \
	| eval date=strftime(_time,"%Y/%m/%d") \
	| eval indexedMB=round(bytes/1024/1024, 3) \
	| rename License_Usage_Events.pool AS pool License_Usage_Events.idx AS index_name License_Usage_Events.st AS sourcetype_name \
	| fields - _time bytes \
	| table date pool index_name sourcetype_name indexedMB

[Run Once - Build Index Definition Lookup]
action.email.useNSSubject = 1
alert.track = 0
description = Initial population of index_definition.csv
display.general.timeRangePicker.show = 0
search = | rest splunk_server_group=dmc_group_cluster_master /services/data/indexes-extended\
	| eval index=title\
	| eval warmRetentionDays=maxHotSpanSecs/60/60/24\
	| eval frozenRetentionDays=frozenTimePeriodInSecs/60/60/24\
	| eval compressionFactor=.15, metadataFactor=.35\
	| fields description, index, dailyVolumeGB, warmRetentionDays, coldRetentionDays, frozenRetentionDays, compressionFactor, metadataFactor, indexReplication\
	| outputlookup createinapp=true override_if_empty=false index_definition.csv

[Unmanaged Forwarders]
description = Daily Populates: unmanaged_forwarders.csv
search = index=_internal sourcetype="splunkd" source="*metrics.log" group=tcpin_connections fwdType=uf \
	| stats count latest(_time) AS last_metrics_event values(os) AS os values(version) AS version mean(tcp_KBps) mean(tcp_eps) by hostname, guid \
	| fields - count \
	| eval is_managed="false" \
	| convert ctime(last_metrics_event) \
	| rex field=hostname "^(?<normalized_hostname>[^\.]+)" \
	| eval normalized_hostname=lower(normalized_hostname) \
	| join guid type=outer \
	[| rest splunk_server_group=dmc_group_deployment_server /services/deployment/server/clients \
	| eval is_managed="true" \
	| rex field=hostname "^(?<normalized_hostname>[^\.]+)" \
	| eval normalized_hostname=lower(normalized_hostname) \
	| rename name AS guid \
	| fields + normalized_hostname, is_managed, guid] \
	| where is_managed="false" \
	| rename hostname AS Hostname guid AS GUID last_metrics_event AS "Last Event" os AS "OS" version AS Version "mean(tcp_KBps)" AS "Tx KBps" "mean(tcp_eps)" AS "Tx EPS" is_managed AS "Managed" normalized_hostname AS "Normalized Hostname" \
	| lookup all_source_list local=true host AS Hostname OUTPUT index sourcetype source \
	| outputlookup unmanaged_forwarders.csv

[Summary Storage Info - Yesterday]
search = index=_introspection sourcetype=splunk_disk_objects component=Partitions
    [ inputlookup server_inventory.csv where (primary_role="Indexer")
    | fields host
    | rename host AS splunk_server]
| eval date=strftime(_time,"%Y/%m/%d")
| eval mount_point = 'data.mount_point'
| eval free = if(isnotnull('data.available'), 'data.available', 'data.free')
| eval disk_usageMB=('data.capacity'-free)
| eval server_mount_point = host.":".mount_point
| rename host AS splunk_host
| stats first(date) AS date first(splunk_host) AS splunk_host first(mount_point) AS mount_point max(disk_usageMB) AS diskUsageMB by server_mount_point
| fields date splunk_host mount_point diskUsageMB
| join type=left splunk_host mount_point
    [ search index=_introspection sourcetype=splunk_disk_objects component=Partitions
        [ inputlookup server_inventory.csv where (primary_role="Indexer")
        | fields host
        | rename host AS splunk_server]
        [ inputlookup server_inventory.csv where (primary_role="Indexer")
        | fields host]
    | eval date=strftime(_time,"%Y/%m/%d")
    | eval mount_point = 'data.mount_point'
    | eval free = if(isnotnull('data.available'), 'data.available', 'data.free')
    | eval disk_totalMB=('data.capacity')
    | eval server_mount_point = host.":".mount_point
    | rename host AS splunk_host
    | stats first(date) AS date first(splunk_host) AS splunk_host first(mount_point) AS mount_point max(disk_totalMB) AS diskTotalMB by server_mount_point
    | fields date splunk_host mount_point diskTotalMB]
action.summary_index = 1
action.summary_index._name = summary_storage_history
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 1 * * *
description = Daily Populates: summary_storage_history
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
realtime_schedule = 0

[Summary License Usage - Yesterday]
search = index=_internal \
	[| inputlookup server_inventory.csv WHERE primary_role="License Master" \
	| eval host=lower(host) \
	| table host] source=*license_usage.log type=RolloverSummary b>0 \
	| eval date=strftime(_time,"%Y/%m/%d") \
	| stats first(date) AS date sum(b) AS volume_b max(poolsz) AS quota_b by pool \
	| fields date pool volume_b quota_b
action.summary_index = 1
action.summary_index._name = summary_license_history
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 1 * * *
description = Daily Populates: summary_license_history
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
realtime_schedule = 0

[Summary Deployment Client]
action.summary_index = 1
action.summary_index._name = summary_deployment_client_history
alert.suppress = 0
alert.track = 0
cron_schedule = 0,15,30,45 * * * *
description = Populates Every 15 Minutes: summary_deployment_client_history
disabled = 1
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
search = index=_internal
    [| inputlookup server_inventory.csv where primary_role="Deployment Server"
    | table host ]
| rex field=message "Subscribed: channel=deploymentServer/phoneHome/default/reply/(?<deploymentClient>\w*\d*)"
| table _time deploymentClient host

[Source Host List]
search = | eventcount summarize=false index=* OR index=_* \
	| map maxsearches=100 search=" | metadata type=hosts index=$index$| convert ctime(*Time) | table host" \
	| dedup host \
	| outputlookup daily_host_list.csv
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Populates daily_host_list.csv
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1

[Run Once - Build Server Inventory Lookup]
action.email.useNSSubject = 1
alert.track = 0
description = Initial population of server_inventory.csv
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_view = search
search = | rest splunk_server_group=* /services/server/info \
	| eval operating_system=os_name\
	| eval host=host_fqdn\
	| join host type=left\
	[| rest splunk_server_group=dmc_group_deployment_server /services/server/info \
	| table host \
	| eval primary_role="Deployment Server"] \
	| join host type=left\
	[| rest splunk_server_group=dmc_group_license_master /services/server/info \
	| table host \
	| eval primary_role="License Master"] \
	| join host type=left\
	[| rest splunk_server_group=dmc_group_cluster_master /services/server/info \
	| table host \
	| eval primary_role="Cluster Master"] \
	| join host type=left\
	[| rest splunk_server_group=dmc_group_indexer /services/server/info \
	| table host cluster_label\
	| eval primary_role="Indexer"] \
	| join host type=left\
	[| rest splunk_server_group=dmc_group_search_head /services/server/info \
	| table host \
	| eval primary_role="Search Head"] \
	| stats values(operating_system) AS operating_system values(primary_role) AS primary_role values(cluster_label) AS cluster_label by host\
	| fields host, primary_role, secondary_role, cluster_label, environment, geolocation, operating_system, ip_address, servertype, description\
	| outputlookup createinapp=true override_if_empty=false server_inventory.csv

[Run Once - Build Indexer GUID Lookup]
action.email.useNSSubject = 1
alert.track = 0
description = Initial population of IndexerLicenseID.csv
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
request.ui_dispatch_view = search
search = | rest splunk_server=* /services/search/distributed/peers \
	| rename guid AS i, peerName AS indexer \
	| table i indexer \
	| outputlookup createinapp=true override_if_empty=false IndexerLicenseID.csv

[Alert - User With CAN_DELETE]
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 5m
alert.track = 1
counttype = number of events
cron_schedule = */1 * * * *
description = Alerts if a user is given the "delete_by_keyword" capability
disabled = 1
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = flashlight
request.ui_dispatch_view = search
search = | rest splunk_server_group=dmc_group_search_head /services/authentication/users \
	| where capabilities="delete_by_keyword"\
	| stats values(splunk_server) AS splunk_server BY title
